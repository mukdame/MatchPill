{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf390
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red63\green110\blue116;\red46\green13\blue110;\red92\green38\blue153;
\red0\green116\blue0;\red38\green71\blue75;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab529
\pard\tx529\pardeftab529\pardirnatural

\f0\fs22 \cf0 \CocoaLigature0     imgPill.\cf2 img\cf0 .\cf3 copyTo\cf0 (imgPill.\cf2 imgOut\cf0 );\
    \cf4 vector\cf0 <\cf4 vector\cf0 <\cf4 Point\cf0 > > contours;\
    \cf5 // Test Contour retrieval mode\cf0 \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                     contours,\cf5 // vector of vectors of points\cf0 \
                     \cf3 CV_RETR_EXTERNAL\cf0 , \cf5 // retrieve only external contours\cf0 \
                     \cf3 CV_CHAIN_APPROX_NONE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
    \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_LIST\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_NONE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
    \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_CCOMP\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_NONE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
    \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_TREE\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_NONE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
    \
    \cf5 // Test Contour approximation method\cf0 \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_LIST\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_NONE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
    \
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_LIST\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_SIMPLE\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
\
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_LIST\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_TC89_L1\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);\
\
    \cf3 findContours\cf0 ( imgPill.\cf2 imgOut\cf0 , \cf5 // binary input image\cf0 \
                 contours,\cf5 // vector of vectors of points\cf0 \
                 \cf3 CV_RETR_LIST\cf0 , \cf5 // retrieve only external contours\cf0 \
                 \cf3 CV_CHAIN_APPROX_TC89_KCOS\cf0 ); \cf5 // detect all pixels of each contour\cf0 \
    imgPill.\cf6 WriteImage\cf0 (\cf2 stepImgNo\cf0 ++);}